trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'docker-shuttle-connection-project'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Run a Docker Compose command'
  
    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'docker-shuttle-connection-project'
  #   #     repository: '- task: DockerCompose@0
  # inputs:
  #   containerregistrytype: 'Container Registry'
  #   dockerRegistryEndpoint: 'docker-shuttle-connection-project'
  #   dockerComposeFile: '**/docker-compose.yml'
  #   projectName: 'agunuworld/shuttle-docker-devops'
  #   action: 'Run a Docker Compose command''
    #     command: 'buildAndPush'
    #     Dockerfile: '$(Build.SourcesDirectory)/src/Dockerfile'
    #     tags: '$(tag)'
#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(System.DefaultWorkingDirectory)'
#         Contents: '**/*.yaml'
#         TargetFolder: '$(Build.ArtifactStagingDirectory)'
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#         ArtifactName: 'manifests'
#         publishLocation: 'Container'
# - stage: Deploy
#   displayName: Deploy image
#   jobs:  
#   - job: Deploy
#     displayName: Deploy
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: DownloadPipelineArtifact@2
#       inputs:
#         buildType: 'current'
#         artifactName: 'manifests'
#         itemPattern: '**/*.yaml'
#         targetPath: '$(System.ArtifactsDirectory)'
    # - task: KubernetesManifest@0
    #   inputs:
    #     action: 'deploy'
    #     kubernetesServiceConnection: 'azure-kubernetes-connection'
    #     namespace: 'default'
    #     manifests: '$(System.ArtifactsDirectory)/configuration/kubernetes/deployment.yaml'
    #     containers: 'in28min/currency-exchange-devops:$(tag)'
# trigger:
# - master

# resources:
# - repo: self

# variables:
#   tag: '$(Build.BuildId)'

# stages:
# - stage: Build
#   displayName: Build image
#   jobs:  
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: Docker@2
#       displayName: Build an image
#       inputs:
#         command: build
#         dockerfile: '$(Build.SourcesDirectory)/src/Dockerfile'
#         tags: |
#           $(tag)